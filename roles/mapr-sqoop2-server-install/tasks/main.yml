---
# Install Sqoop2 Server
- name: Install mapr-sqoop2-server
  package: name=mapr-sqoop2-server state=present
  register: sqoop2_result

# Other actions
- name: Set owner mapr-system user
  file: path=/opt/mapr/sqoop owner="{{ mapr_user }}" group="{{ mapr_group }}" state=directory recurse=yes

#- name: Find Sqoop path
#  find: paths="/opt/mapr/sqoop/" patterns="sqoop*" file_type=directory
#  register: sqoop_path_result
#  failed_when: sqoop_path_result.matched != 1
- name: Get Sqoop2 server version
  shell: cat /opt/mapr/sqoop/sqoopversion
  register: version_output
  check_mode: no
  changed_when: no
- name: Configure sqoop.properties
  template: src=sqoop.properties dest="/opt/mapr/sqoop/sqoop-{{ version_output.stdout }}/conf/sqoop.properties"
- name: Copy to /opt/mapr/conf/conf.d/warden.sqoop2.conf
  copy: remote_src=true src="/opt/mapr/sqoop/sqoop-{{ version_output.stdout }}/conf.d/warden.sqoop2.conf" dest=/opt/mapr/conf/conf.d/warden.sqoop2.conf mode=0644 owner="{{ mapr_user }}" group="{{ mapr_group }}"

- name: Configure.sh -R
  shell: "/opt/mapr/server/configure.sh -R"
  when: sqoop2_result.changed
- pause: seconds=10
  when: sqoop2_result.changed
- name: Restart Sqoop2 Server
  shell: "maprcli node services -name sqoop2 -action restart -nodes {{ ansible_fqdn }}"
  register: task_result
  until: task_result.rc == 0
  retries: 10
  delay: 10
  ignore_errors: yes
  environment:
    MAPR_TICKETFILE_LOCATION: /opt/mapr/conf/mapruserticket
  when: sqoop2_result.changed
<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<configuration>

    <property>
        <name>oozie.service.ProxyUserService.proxyuser.{{ mapr_user }}.hosts</name>
        <value>*</value>
        <description>
            List of hosts the '#USER#' user is allowed to perform 'doAs'
            operations.

            The '#USER#' must be replaced with the username o the user who is
            allowed to perform 'doAs' operations.

            The value can be the '*' wildcard or a list of hostnames.

            For multiple users copy this property and replace the user name
            in the property name.
        </description>
    </property>
    <property>
        <name>oozie.service.ProxyUserService.proxyuser.{{ mapr_user }}.groups</name>
        <value>*</value>
        <description>
            List of groups the '#USER#' user is allowed to impersonate users
            from to perform 'doAs' operations.

            The '#USER#' must be replaced with the username o the user who is
            allowed to perform 'doAs' operations.

            The value can be the '*' wildcard or a list of groups.

            For multiple users copy this property and replace the user name
            in the property name.
        </description>
    </property>
    {% if oozie_ssl %}
    <property>
        <name>oozie.https.enabled</name>
        <value>true</value>
        <description>Controls whether SSL encryption is enabled.</description>
    </property>

    <property>
        <name>oozie.https.truststore.file</name>
        <value>/opt/mapr/conf/ssl_truststore</value>
        <description>Path to a TrustStore file.</description>
    </property>

    <property>
        <name>oozie.https.keystore.file</name>
        <value>/opt/mapr/conf/ssl_keystore</value>
        <description>Path to a KeyStore file.</description>
    </property>

    <property>
        <name>oozie.https.keystore.pass</name>
        <value>mapr123</value>
        <description>Password to the KeyStore.</description>
    </property>
    {% endif %}
    {% if oozie_db_type == 'mysql' %}
    <property>
        <name>oozie.service.JPAService.jdbc.driver</name>
        <value>com.mysql.jdbc.Driver</value>
    </property>
    {% if oozie_db_jdbc_url is defined %}
    <property>
        <name>oozie.service.JPAService.jdbc.url</name>
        <value>{{ oozie_db_jdbc_url }}</value>
    </property>
    {% else %}
    <property>
        <name>oozie.service.JPAService.jdbc.url</name>
        <value>jdbc:mysql://{{ oozie_db_host }}:3306/{{ oozie_db_schema }}?createDatabaseIfNotExist=true</value>
    </property>
    {% endif %}

    <property>
        <name>oozie.service.JPAService.jdbc.username</name>
        <value>{{ oozie_db_user }}</value>
    </property>
    {% if oozie_db_encrypt_password %}
    <property>
        <name>hadoop.security.credential.provider.path</name>
        <value>jceks://maprfs/user/mapr/oozie.jceks</value>
    </property>
    <property>
        <name>oozie.service.JPAService.jdbc.password</name>
        <value>*****</value>
    </property>
    {% else %}
    <property>
        <name>oozie.service.JPAService.jdbc.password</name>
        <value>{{ oozie_db_password }}</value>
    </property>
    {% endif %}
    {% elif oozie_db_type == 'oracle' %}
    <property>
        <name>oozie.service.JPAService.jdbc.driver</name>
        <value>oracle.jdbc.OracleDriver</value>
    </property>
    <property>
        <name>oozie.service.JPAService.jdbc.url</name>
        <value>{{ oozie_db_jdbc_url }}</value>
    </property>
    <property>
        <name>oozie.service.JPAService.jdbc.username</name>
        <value>{{ oozie_db_user }}</value>
    </property>

    {% if oozie_db_encrypt_password %}
    <property>
        <name>hadoop.security.credential.provider.path</name>
        <value>jceks://maprfs/user/mapr/oozie.jceks</value>
    </property>
    <property>
        <name>oozie.service.JPAService.jdbc.password</name>
        <value>*****</value>
    </property>
    {% else %}
    <property>
        <name>oozie.service.JPAService.jdbc.password</name>
        <value>{{ oozie_db_password }}</value>
    </property>
    {% endif %}
    {% endif %}
    <property>
        <name>oozie.email.smtp.host</name>
        <value>{{ oozie_smtp_host }}</value>
    </property>
    <property>
        <name>oozie.email.smtp.port</name>
        <value>{{ oozie_smtp_port }}</value>
    </property>
    <property>
        <name>oozie.email.smtp.auth</name>
        <value>{{ oozie_smtp_auth }}</value>
    </property>
    <property>
        <name>oozie.email.smtp.username</name>
        <value>{{ oozie_smtp_username }}</value>
    </property>
    <property>
        <name>oozie.email.smtp.password</name>
        <value>{{ oozie_smtp_password }}</value>
    </property>

    <property>
        <name>oozie.services.ext</name>
        <value>
            org.apache.oozie.service.ZKLocksService,
            org.apache.oozie.service.ZKXLogStreamingService,
            org.apache.oozie.service.ZKJobsConcurrencyService,
            org.apache.oozie.service.ZKUUIDService
        </value>
    </property>
    <property>
        <name>oozie.zookeeper.connection.string</name>
        <value>{{ zookeeper_withport_string }}</value>
    </property>
    <property>
        <name>oozie.zookeeper.namespace</name>
        <value>oozie</value>
    </property>

    {% if oozie_security == 'kerberos' %}
    <property>
        <name>oozie.authentication.type</name>
        <value>kerberos</value>
        <description>
            Defines authentication used for Oozie HTTP endpoint.
            Supported values are: simple | kerberos | #AUTHENTICATION_HANDLER_CLASSNAME#
        </description>
    </property>
    <property>
        <name>oozie.service.HadoopAccessorService.keytab.file</name>
        <value>/opt/mapr/conf/mapr.keytab</value>
        <description>
            Location of the Oozie user keytab file.
        </description>
    </property>

    <property>
        <name>local.realm</name>
        <value>{{ mapr_kerberos_realm }}</value>
        <description>
            Kerberos Realm used by Oozie and Hadoop. Using ‘local.realm’ aligns with Hadoop configuration
        </description>
    </property>

    <property>
        <name>oozie.service.HadoopAccessorService.kerberos.principal</name>
        <value>mapr/{{ ansible_fqdn }}@{{ mapr_kerberos_realm }}</value>
        <description>
            Kerberos principal for Oozie service.
        </description>
    </property>

    <property>
        <name>oozie.authentication.kerberos.principal</name>
        <value>HTTP/{{ ansible_fqdn }}@{{ mapr_kerberos_realm }}</value>
        <description>
            Indicates the Kerberos principal to be used for the HTTP endpoint. The principal MUST start with ‘HTTP/’ per the Kerberos HTTP SPNEGO specification.
        </description>
    </property>
    {% endif %}
</configuration>
---
# Install Hive Metastore
- name: Install mapr-hivemetastore
  package: name=mapr-hivemetastore state=present
  register: hivemeta_result
#- name: Find Hive Path
#  find: paths="/opt/mapr/hive/" patterns="hive*" file_type=directory
#  register: hive_path_result
#  failed_when: hive_path_result.matched != 1
- name: Get Hive version
  shell: cat /opt/mapr/hive/hiveversion
  register: version_output
  check_mode: no
  changed_when: no
- name: Start all hive meta instances
  lineinfile: dest="/opt/mapr/hive/hive-{{ version_output.stdout }}/conf/warden.hivemeta.conf.template" regexp="^services=" line="services=hivemeta:all"
- name: Copy to /opt/mapr/conf/conf.d/warden.hivemeta.conf
  copy: remote_src=true src="/opt/mapr/hive/hive-{{ version_output.stdout }}/conf/warden.hivemeta.conf.template" dest=/opt/mapr/conf/conf.d/warden.hivemeta.conf mode=0644 owner="{{ mapr_user }}" group="{{ mapr_group }}"
- name: Configure.sh -R
  shell: /opt/mapr/server/configure.sh -R
  when: hivemeta_result.changed
- pause: seconds=10
  when: hivemeta_result.changed
- name: Restart Hive Metastore
  shell: "maprcli node services -name hivemeta -action restart -nodes {{ ansible_fqdn }}"
  register: task_result
  until: task_result.rc == 0
  retries: 10
  delay: 10
  ignore_errors: yes
  environment:
    MAPR_TICKETFILE_LOCATION: /opt/mapr/conf/mapruserticket
  when: hivemeta_result.changed
